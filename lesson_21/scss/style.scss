@use "sass:math";

// Підключення шрифтів з Google Fonts
@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@500&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@600&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@700&display=swap');
// Локальне підключення шрифтів
// @import "_fonts.scss";
// Скидання стилів
@import "_reset.scss";
// Міксіни
@import "_mixins.scss";
// Окремі сторінки

// **додавання затримки анімації до елементів за допомогою циклу**
// @for $i from 1 through 6 {
//   &:nth-child(#{$i}) {
//      $delay: ($i - 1) * 0.2;
//      animation-delay: #{$delay}s;
//   }
// }

// функція SCSS для переводу пікселів у відсотки %
//Percent
// @function percent($px, $from: 100) {
// 	$result: math.div($px, $from) * 100%;
// 	@return $result;
// }


// Налаштування адаптивної сітки ===============================================================================================================================================================================================================================================================================================

// Мінімальна ширина сторінки
$minWidth: 320;
// Ширина полотна (макету)
$maxWidth: 1920;
// Ширина обмежуючого контейнера (0 = немає обмеження)
$maxWidthContainer: 1350;
// Загальний відступ у контейнера
// (30 = по 15px ліворуч і праворуч, 0 = немає відступу)
$containerPadding: 30;
// Ширина спрацьовування першого брейкпоінту
$containerWidth: $maxWidthContainer + $containerPadding;

// ==========================================================



body {
  font-family: "Quicksand", sans-serif;
}

.wrapper {
	min-height: 100%;
	overflow: clip;
	display: flex;
	flex-direction: column;
  & > main {
    flex-grow: 1;
  }
}

/* ------------------------- */
[class*="__container"] {
	max-width: toRem(1270);
	padding-left: toRem(15);
	padding-right: toRem(15);
	margin: 0 auto;
}

.homework {
  padding-block: toRem(60);
  background-color: rgb(171, 239, 241);

  // .homework__tasks

  &__tasks {
  }
}
.tasks {
  display: flex;
  flex-direction: column;
  padding: toRem(20);
  row-gap: toRem(30);
  background-color: rgba(255, 255, 255, 0.3);
  border-radius: toRem(20);
  overflow: hidden;
  // .tasks__block

  &__block {
    & > * {
      margin-bottom: toRem(30);
    }
    & > *:last-child {
      margin-bottom: 0;
    }
  }

  // .tasks__title

  &__title {
    @include adaptiveValue('font-size', 34, 28);
    font-weight: 700;
    background-image: linear-gradient(0deg, rgba(111,161,249,1) 47%, rgba(110,250,255,1) 100%);
    background-clip: text;
    color: transparent;
    span {
      color: #d376fb;
    }
  }

  // .tasks__options

  &__options {
    
  }

  // .tasks__item

  &__item {
    background-color: rgb(195, 171, 235);
    border-radius: toRem(15);
    padding: toRem(15);
    font-size: toRem(24);
    color: #fff;
    transform: translateX(-100%);
    animation: animate 2s forwards;
    opacity: 0;
    visibility: hidden;
    @keyframes animate {
      0% {
        transform: translateX(-100%);
        opacity: 0;
        visibility: hidden;
      }
      100% {
        transform: translateX(0);
        opacity: 1;
        visibility: visible;
      }
    }
    @for $i from 1 through 4 {
        &:nth-child(#{$i}) {
           $delay: ($i - 1) * 0.2;
            animation-delay: #{$delay}s;
        }
      }
      &:not(:last-child) {
        margin-bottom: toRem(20);
      }
  }

  // .tasks__answer

  &__answer {
    cursor: pointer;
    summary {
      text-transform: uppercase;
      letter-spacing: toRem(3);
      font-weight: 600;
      color: rgb(36, 228, 200);
      &:not(:last-child) {
        margin-bottom: toRem(10);
      }
    }
    summary::marker {
      color: #52b2c3;
    }
    span {
      color: #d376fb;
      font-size: toRem(20);
      line-height: 125%;
    }
  }
}
